{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\CS172\\\\cs172project\\\\twitter-search\\\\src\\\\searchBar.js\";\nimport React, { Component } from 'react';\n\nfunction MyTextInput(props) {\n  function handleChange(event) {\n    if (props.onChange) props.onChange(event);\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: props.value,\n    name: props.name,\n    ref: props.inputRef,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 14\n    }\n  }));\n}\n\nclass MyInputBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (this.props.onChange) this.props.onChange(event);\n    };\n\n    this.textInput = null;\n\n    this.setTextInputRef = element => {\n      this.textInput = element;\n    };\n\n    this.focusTextInput = () => {\n      if (this.textInput) this.textInput.focus();\n    };\n  }\n\n  componentDidMount() {\n    this.focusTextInput();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.setTextInputRef,\n      type: \"text\",\n      placeholder: \"Your Name\",\n      name: this.props.inputFullName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Your message\",\n      name: this.props.inputContentName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}\n\nclass FormsAndInputs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const data = this.state; // console.log(this.inputFullNameRef.current.value)\n\n      console.log(\"Final data is\", data);\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault(); // console.log(event)\n      // console.log(event.target.name)\n      // console.log(event.target.value)\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFocusClick = event => {\n      event.preventDefault();\n      this.inputEmailRef.current.focus();\n    };\n\n    this.handleClearClick = event => {\n      event.preventDefault();\n      this.inputFullNameRef.current.value = '';\n      this.setState({\n        myFullName: ''\n      });\n    };\n\n    this.state = {\n      myFullName: '',\n      myContent: '',\n      email: ''\n    };\n    this.inputFullNameRef = React.createRef();\n    this.inputEmailRef = React.createRef();\n  }\n\n  // componentDidMount(){\n  //     this.inputFullNameRef.current.focus()\n  // }\n  render() {\n    const {\n      myFullName\n    } = this.state;\n    const {\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Forms and Inputs\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Full name is: \", myFullName), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MyTextInput, {\n      inputRef: this.inputEmailRef,\n      value: email,\n      name: \"email\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MyInputBlock, {\n      onChange: this.handleInputChange,\n      inputFullName: \"myFullName\",\n      inputContentName: \"myContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }\n    }, \"Send Message\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleFocusClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }\n    }, \"Focus\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClearClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }\n    }, \"Clear\"))));\n  }\n\n}\n\nexport default FormsAndInputs; // <p><input ref={this.inputFullNameRef} type='text' placeholder='Your Name' value={fullName} name='fullName' onChange={this.handleInputChange} /></p>\n//           <p><textarea ref={node => this.inputContentRef = node} placeholder='Your message' name='content' required={true} onChange={this.handleInputChange}></textarea></p>","map":{"version":3,"sources":["C:/Users/Eric/Desktop/CS172/cs172project/twitter-search/src/searchBar.js"],"names":["React","Component","MyTextInput","props","handleChange","event","onChange","value","name","inputRef","MyInputBlock","constructor","textInput","setTextInputRef","element","focusTextInput","focus","componentDidMount","render","inputFullName","inputContentName","FormsAndInputs","handleSubmit","preventDefault","data","state","console","log","handleInputChange","setState","target","handleFocusClick","inputEmailRef","current","handleClearClick","inputFullNameRef","myFullName","myContent","email","createRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nfunction MyTextInput(props){\r\n    function handleChange(event){\r\n         if (props.onChange) props.onChange(event)  \r\n    }\r\n    return (\r\n         <p>\r\n             <input type='email' value={props.value} name={props.name} ref={props.inputRef} onChange={handleChange} />\r\n         </p>\r\n     )\r\n}\r\n\r\nclass MyInputBlock extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.textInput = null\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element\r\n        }\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus()\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n         if (this.props.onChange) this.props.onChange(event)  \r\n    }\r\n    componentDidMount(){\r\n        this.focusTextInput()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n          <p><input ref={this.setTextInputRef} type='text' placeholder='Your Name'  name={this.props.inputFullName} onChange={this.handleChange}/></p>\r\n          <p><textarea placeholder='Your message' name={this.props.inputContentName}  onChange={this.handleChange}></textarea></p>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nclass FormsAndInputs extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            myFullName: '',\r\n            myContent: '',\r\n            email: ''\r\n        }\r\n        this.inputFullNameRef = React.createRef()\r\n        this.inputEmailRef = React.createRef()\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const data = this.state\r\n        // console.log(this.inputFullNameRef.current.value)\r\n        console.log(\"Final data is\", data)\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault()\r\n       // console.log(event)\r\n       // console.log(event.target.name)\r\n       // console.log(event.target.value)\r\n       this.setState({\r\n           [event.target.name]: event.target.value\r\n       })\r\n    }\r\n\r\n    handleFocusClick = (event) => {\r\n        event.preventDefault()\r\n            this.inputEmailRef.current.focus()\r\n    }\r\n    handleClearClick = (event) => {\r\n        event.preventDefault()\r\n            this.inputFullNameRef.current.value = ''\r\n            this.setState({\r\n                myFullName: ''\r\n            })\r\n    }\r\n    // componentDidMount(){\r\n    //     this.inputFullNameRef.current.focus()\r\n    // }\r\n  render () {\r\n      const {myFullName} = this.state\r\n      const {email} = this.state\r\n    return (\r\n      <div>\r\n        <h1>Forms and Inputs</h1>\r\n        <p>Full name is: {myFullName}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n            <MyTextInput inputRef={this.inputEmailRef} value={email} name='email'  onChange={this.handleInputChange}/>\r\n            <MyInputBlock onChange={this.handleInputChange} inputFullName=\"myFullName\" inputContentName='myContent'/>\r\n          <p><button>Send Message</button></p>\r\n          <p><button onClick={this.handleFocusClick}>Focus</button></p>\r\n          <p><button onClick={this.handleClearClick}>Clear</button></p>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormsAndInputs\r\n\r\n// <p><input ref={this.inputFullNameRef} type='text' placeholder='Your Name' value={fullName} name='fullName' onChange={this.handleInputChange} /></p>\r\n//           <p><textarea ref={node => this.inputContentRef = node} placeholder='Your message' name='content' required={true} onChange={this.handleInputChange}></textarea></p>\r\n"]},"metadata":{},"sourceType":"module"}